{% set version = "9.9.0.52" %}
{% set platform = "linux-x86_64" %}  # [linux64]
{% set platform = "linux-sbsa" %}  # [aarch64]
{% set platform = "windows-x86_64" %}  # [win]
{% set extension = "tar.xz" %}  # [not win]
{% set extension = "zip" %}  # [win]

package:
  name: cudnn
  version: {{ version }}

source:
  url: https://developer.download.nvidia.com/compute/cudnn/redist/cudnn/{{ platform }}/cudnn-{{ platform }}-{{ version }}_cuda11-archive.{{ extension }}  # [(cuda_compiler_version or "").startswith("11")]
  url: https://developer.download.nvidia.com/compute/cudnn/redist/cudnn/{{ platform }}/cudnn-{{ platform }}-{{ version }}_cuda12-archive.{{ extension }}  # [(cuda_compiler_version or "").startswith("12")]
  sha256: 5696665117d87f112024ec47d7d3a90f5f338d13226dd6ea50e5b24d6163872f  # [linux64 and (cuda_compiler_version or "").startswith("11")]
  sha256: 73f99e9c5d39cb7799dfe0f7b42d09a0bf6e3f5a90dbd16d570438daa1daea18  # [linux64 and (cuda_compiler_version or "").startswith("12")]
  sha256: 564323790e3c9f9b4ebcbbf7624cac8c0f8f6b1c8da42efcd0bd5087ed9bcd8c  # [aarch64 and (cuda_compiler_version or "").startswith("11")]
  sha256: f0faeee9eff3d77d0e8a3c55ce6a096ee6050f7da4e54e1ff541e9fa31820bbd  # [aarch64 and (cuda_compiler_version or "").startswith("12")]
  sha256: 9ab4a7cbfb4ccbd73b8f844ce170fc0d49952cd9115b056629f4f10524830fc1  # [win and (cuda_compiler_version or "").startswith("11")]
  sha256: f8bd01b14cf43a4dfb1dff34dd9ceb172efc76fe6d3e6fda3901b6905e1ac5fc  # [win and (cuda_compiler_version or "").startswith("12")]

build:
  number: 1
  skip: true  # [cuda_compiler_version in ("None", None)]
  # Disable binary relocation to workaround patchelf issue
  # xref: https://github.com/NixOS/patchelf/issues/492
  binary_relocation: false
  script:   # [win]
    - mkdir %LIBRARY_INC%                                   # [win]
    - copy %SRC_DIR%\\include\\cudnn*.h %LIBRARY_INC%\\     # [win]
    - mkdir %LIBRARY_LIB%                                   # [win]
    - copy %SRC_DIR%\\lib\\x64\\cudnn*.lib %LIBRARY_LIB%\\  # [win]
    - mkdir %LIBRARY_BIN%                                   # [win]
    - copy %SRC_DIR%\\bin\\cudnn*.dll %LIBRARY_BIN%\\       # [win]
  ignore_run_exports_from:
    - {{ compiler('cuda') }}
    - libcublas-dev  # [(cuda_compiler_version or "").startswith("12")]
  run_exports:
    - {{ pin_subpackage('cudnn') }}

requirements:
  build:
    - {{ stdlib('c') }}
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - {{ compiler('cuda') }}
    - arm-variant * {{ arm_variant_type }}  # [aarch64]
    - patchelf >=0.12  # [linux]
    - cf-nvidia-tools 1  # [linux]
  host:
    - cuda-version {{ cuda_compiler_version }}
    # For Windows, zlib is statically linked into CUDNN since version 9.2
    # https://docs.nvidia.com/deeplearning/cudnn/latest/release-notes.html#cudnn-9-2-0
    # For Linux, zlib remains a dynamically linked dependency
    - zlib  # [not win]
  run:
    - {{ pin_compatible("cuda-version", min_pin="x", max_pin="x") }}
    - cudatoolkit       # [(cuda_compiler_version or "").startswith("11")]
    - cuda-nvrtc        # [(cuda_compiler_version or "").startswith("12")]
    - libcublas         # [(cuda_compiler_version or "").startswith("12")]
  run_constrained:
    - arm-variant * {{ arm_variant_type }}  # [aarch64]

test:
  requires:
    - {{ compiler('c') }}  # [linux]
  files:
    - test_load_elf.c      # [linux]
  commands:
    - if not exist %LIBRARY_INC%/cudnn.h exit 1                       # [win]
    - if not exist %LIBRARY_INC%/cudnn_adv.h exit 1                   # [win]
    - if not exist %LIBRARY_LIB%/cudnn.lib exit 1                     # [win]
    - if not exist %LIBRARY_LIB%/cudnn_adv.lib exit 1                 # [win]
    - if not exist %LIBRARY_BIN%/cudnn64_9.dll exit 1                 # [win]
    - if not exist %LIBRARY_BIN%/cudnn_adv64_9.dll exit 1             # [win]
    - test -f $PREFIX/include/cudnn.h                                 # [linux]
    - test -f $PREFIX/include/cudnn_adv.h                             # [linux]
    - test -f $PREFIX/lib/libcudnn.so                                 # [linux]
    - test -f $PREFIX/lib/libcudnn_adv.so                             # [linux]
    - ${GCC} test_load_elf.c -std=c99 -Werror -ldl -o test_load_elf   # [linux]
    - for f in $PREFIX/lib/libcudnn*.so; do ./test_load_elf $f; done  # [linux]

about:
  home: https://developer.nvidia.com/cudnn
  license: LicenseRef-cuDNN-Software-License-Agreement
  license_file: LICENSE
  license_url: https://docs.nvidia.com/deeplearning/cudnn/sla/index.html
  summary: "NVIDIA's cuDNN deep neural network acceleration library"
  description: |
    NVIDIA CUDA Deep Neural Network (cuDNN) is a GPU-accelerated library of
    primitives for deep neural networks. It provides highly tuned
    implementations of routines arising frequently in DNN applications.

    License Agreements:- The packages are governed by the NVIDIA cuDNN
    Software License Agreement (EULA). By downloading and using the packages,
    you accept the terms and conditions of the NVIDIA cuDNN EULA -
    https://docs.nvidia.com/deeplearning/cudnn/sla/index.html
  doc_url: https://docs.nvidia.com/deeplearning/cudnn/
  dev_url: https://developer.nvidia.com/rdp/cudnn-download

extra:
  recipe-maintainers:
    - conda-forge/cuda
    - billysuh7
    - adibbley
    - bdice
    - jakirkham
    - vyasr
